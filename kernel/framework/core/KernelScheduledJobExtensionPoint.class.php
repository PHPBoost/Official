<?php
/*##################################################
 *                       KernelScheduledJobExtensionPoint.class.php
 *                            -------------------
 *   begin                : April 17, 2011
 *   copyright            : (C) 2010 Loic Rouchon
 *   email                : loic.rouchon@phpboost.com
 *
 *
 ###################################################
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 ###################################################*/

class KernelScheduledJobExtensionPoint extends AbstractScheduledJobExtensionPoint
{
	/**
	 * {@inheritDoc}
	 */
	public function on_changeday(Date $yesterday, Date $today)
	{
		Session::gc();
		$this->perform_stats_changeday();
		$this->clear_all_temporary_cache_files();
		UserService::remove_old_unactivated_member_accounts();
		$this->remove_captcha_entries();
		$this->check_updates();
	}

	private function perform_stats_changeday()
	{
		$yesterday_timestamp = time() - 86400;

		//We insert today's entry in the stats table
		PersistenceContext::get_sql()->query_inject("INSERT INTO " . DB_TABLE_STATS . " (stats_year, stats_month, " .
		"stats_day, nbr, pages, pages_detail) VALUES ('" . gmdate_format('Y',
		$yesterday_timestamp, TIMEZONE_SYSTEM) . "', '" . gmdate_format('m', $yesterday_timestamp,
		TIMEZONE_SYSTEM) . "', '" . gmdate_format('d', $yesterday_timestamp, TIMEZONE_SYSTEM) .
		"', 0, 0, '')", __LINE__, __FILE__);

		//We retrieve the id we just come to create
		$last_stats = PersistenceContext::get_sql()->insert_id("SELECT MAX(id) FROM " . PREFIX . "stats");

		PersistenceContext::get_sql()->query_inject("UPDATE " . DB_TABLE_STATS_REFERER .
			" SET yesterday_visit = today_visit", __LINE__, __FILE__);
		PersistenceContext::get_sql()->query_inject("UPDATE " . DB_TABLE_STATS_REFERER .
			" SET today_visit = 0, nbr_day = nbr_day + 1", __LINE__, __FILE__);
		//We delete the referer entries older than one week
		PersistenceContext::get_sql()->query_inject("DELETE FROM " . DB_TABLE_STATS_REFERER .
		" WHERE last_update < '" . ($yesterday_timestamp) . "'", __LINE__, __FILE__);

		//We retrieve the number of pages seen until now
		$pages_displayed = StatsSaver::retrieve_stats('pages');

		//We delete the file containing the displayed pages

		$pages_file = new File(PATH_TO_ROOT . '/cache/pages.txt');
		$pages_file->delete();

		//How much visitors were there today?
		$total_visit = PersistenceContext::get_sql()->query("SELECT total FROM " . DB_TABLE_VISIT_COUNTER .
			" WHERE id = 1", __LINE__, __FILE__);
		//We truncate the table containing the visitors of today
		PersistenceContext::get_sql()->query_inject("DELETE FROM " . DB_TABLE_VISIT_COUNTER .
			" WHERE id <> 1", __LINE__, __FILE__);
		//We update the last changeday date
		PersistenceContext::get_sql()->query_inject("UPDATE " . DB_TABLE_VISIT_COUNTER .
			" SET time = '" . gmdate_format('Y-m-d', time(), TIMEZONE_SYSTEM) .
				"', total = 1 WHERE id = 1", __LINE__, __FILE__);
		//We insert this visitor as a today visitor
		PersistenceContext::get_sql()->query_inject("INSERT INTO " . DB_TABLE_VISIT_COUNTER .
			" (ip, time, total) VALUES('" . USER_IP . "', '" . gmdate_format('Y-m-d', time(),
		TIMEZONE_SYSTEM) . "', '0')", __LINE__, __FILE__);

		//We update the stats table: the number of visits today
		PersistenceContext::get_sql()->query_inject("UPDATE " . DB_TABLE_STATS . " SET nbr = '" . $total_visit .
		"', pages = '" . array_sum($pages_displayed) . "', pages_detail = '" .
		addslashes(serialize($pages_displayed)) . "' WHERE id = '" . $last_stats . "'",
		__LINE__, __FILE__);
	}

	private function clear_all_temporary_cache_files()
	{
		//We delete all the images generated by the LaTeX formatter
		$cache_image_folder_path = new Folder(PATH_TO_ROOT . '/images/maths/');
		$last_week_timestamp = time() - (86400 * 7);
		foreach ($cache_image_folder_path->get_files('`\.png$`') as $image)
		{
			if ($image->get_last_modification_date() < $last_week_timestamp)
			{
				$image->delete();
			}
		}
	}

	private function remove_captcha_entries()
	{
		PersistenceContext::get_querier()->inject("DELETE FROM " . DB_TABLE_VERIF_CODE .
			" WHERE timestamp < :timestamp", array('timestamp' => (time() - 86400)));
	}

	private function check_updates()
	{
		new Updates();
	}
}
?>